// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: dht.proto

package dht_pb

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	pb "github.com/libp2p/go-libp2p-record/pb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Peer_ConnectionType int32

const (
	// sender does not have a connection to peer, and no extra information (default)
	Peer_NOT_CONNECTED Peer_ConnectionType = 0
	// sender has a live connection to peer
	Peer_CONNECTED Peer_ConnectionType = 1
	// sender recently connected to peer
	Peer_CAN_CONNECT Peer_ConnectionType = 2
	// sender recently tried to connect to peer repeatedly but failed to connect
	// ("try" here is loose, but this should signal "made strong effort, failed")
	Peer_CANNOT_CONNECT Peer_ConnectionType = 3
)

var Peer_ConnectionType_name = map[int32]string{
	0: "NOT_CONNECTED",
	1: "CONNECTED",
	2: "CAN_CONNECT",
	3: "CANNOT_CONNECT",
}

var Peer_ConnectionType_value = map[string]int32{
	"NOT_CONNECTED":  0,
	"CONNECTED":      1,
	"CAN_CONNECT":    2,
	"CANNOT_CONNECT": 3,
}

func (x Peer_ConnectionType) String() string {
	return proto.EnumName(Peer_ConnectionType_name, int32(x))
}

func (Peer_ConnectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_616a434b24c97ff4, []int{0, 0}
}

type Peer struct {
	// ID of a given peer.
	Id byteString `protobuf:"bytes,1,opt,name=id,proto3,customtype=byteString" json:"id"`
	// multiaddrs for a given peer
	Addrs [][]byte `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	// used to signal the sender's connection capabilities to the peer
	Connection Peer_ConnectionType `protobuf:"varint,3,opt,name=connection,proto3,enum=dht.pb.Peer_ConnectionType" json:"connection,omitempty"`
	// features list of the node :)
	Features             []string `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_616a434b24c97ff4, []int{0}
}
func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *Peer) GetConnection() Peer_ConnectionType {
	if m != nil {
		return m.Connection
	}
	return Peer_NOT_CONNECTED
}

func (m *Peer) GetFeatures() []string {
	if m != nil {
		return m.Features
	}
	return nil
}

type Message struct {
	Feature              string   `protobuf:"bytes,1,opt,name=feature,proto3" json:"feature,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_616a434b24c97ff4, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetFeature() string {
	if m != nil {
		return m.Feature
	}
	return ""
}

func (m *Message) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Message_BareMsg struct {
	PeerID               string   `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	CloserPeer           []Peer   `protobuf:"bytes,2,rep,name=closerPeer,proto3" json:"closerPeer"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message_BareMsg) Reset()         { *m = Message_BareMsg{} }
func (m *Message_BareMsg) String() string { return proto.CompactTextString(m) }
func (*Message_BareMsg) ProtoMessage()    {}
func (*Message_BareMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_616a434b24c97ff4, []int{1, 0}
}
func (m *Message_BareMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_BareMsg.Unmarshal(m, b)
}
func (m *Message_BareMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_BareMsg.Marshal(b, m, deterministic)
}
func (m *Message_BareMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_BareMsg.Merge(m, src)
}
func (m *Message_BareMsg) XXX_Size() int {
	return xxx_messageInfo_Message_BareMsg.Size(m)
}
func (m *Message_BareMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_BareMsg.DiscardUnknown(m)
}

var xxx_messageInfo_Message_BareMsg proto.InternalMessageInfo

func (m *Message_BareMsg) GetPeerID() string {
	if m != nil {
		return m.PeerID
	}
	return ""
}

func (m *Message_BareMsg) GetCloserPeer() []Peer {
	if m != nil {
		return m.CloserPeer
	}
	return nil
}

type IpfsMessage struct {
	// defines what coral cluster level this query/response belongs to.
	// in case we want to implement coral's cluster rings in the future.
	ClusterLevelRaw int32 `protobuf:"varint,10,opt,name=clusterLevelRaw,proto3" json:"clusterLevelRaw,omitempty"`
	// Used to specify the key associated with this message.
	// PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Used to return a value
	// PUT_VALUE, GET_VALUE
	Record *pb.Record `protobuf:"bytes,3,opt,name=record,proto3" json:"record,omitempty"`
	// Used to return peers closer to a key in a query
	// GET_VALUE, GET_PROVIDERS, FIND_NODE
	CloserPeers []Peer `protobuf:"bytes,8,rep,name=closerPeers,proto3" json:"closerPeers"`
	// Used to return Providers
	// GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
	ProviderPeers        []Peer   `protobuf:"bytes,9,rep,name=providerPeers,proto3" json:"providerPeers"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpfsMessage) Reset()         { *m = IpfsMessage{} }
func (m *IpfsMessage) String() string { return proto.CompactTextString(m) }
func (*IpfsMessage) ProtoMessage()    {}
func (*IpfsMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_616a434b24c97ff4, []int{2}
}
func (m *IpfsMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpfsMessage.Unmarshal(m, b)
}
func (m *IpfsMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpfsMessage.Marshal(b, m, deterministic)
}
func (m *IpfsMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpfsMessage.Merge(m, src)
}
func (m *IpfsMessage) XXX_Size() int {
	return xxx_messageInfo_IpfsMessage.Size(m)
}
func (m *IpfsMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_IpfsMessage.DiscardUnknown(m)
}

var xxx_messageInfo_IpfsMessage proto.InternalMessageInfo

func (m *IpfsMessage) GetClusterLevelRaw() int32 {
	if m != nil {
		return m.ClusterLevelRaw
	}
	return 0
}

func (m *IpfsMessage) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *IpfsMessage) GetRecord() *pb.Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *IpfsMessage) GetCloserPeers() []Peer {
	if m != nil {
		return m.CloserPeers
	}
	return nil
}

func (m *IpfsMessage) GetProviderPeers() []Peer {
	if m != nil {
		return m.ProviderPeers
	}
	return nil
}

func init() {
	proto.RegisterEnum("dht.pb.Peer_ConnectionType", Peer_ConnectionType_name, Peer_ConnectionType_value)
	proto.RegisterType((*Peer)(nil), "dht.pb.Peer")
	proto.RegisterType((*Message)(nil), "dht.pb.Message")
	proto.RegisterType((*Message_BareMsg)(nil), "dht.pb.Message.BareMsg")
	proto.RegisterType((*IpfsMessage)(nil), "dht.pb.IpfsMessage")
}

func init() { proto.RegisterFile("dht.proto", fileDescriptor_616a434b24c97ff4) }

var fileDescriptor_616a434b24c97ff4 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xcd, 0x6e, 0x9b, 0x60,
	0x10, 0x0c, 0xe0, 0xd8, 0x61, 0xb1, 0x1d, 0x67, 0x55, 0x55, 0xc8, 0x3d, 0x04, 0x71, 0xa2, 0x07,
	0x83, 0x44, 0x7b, 0xa8, 0xd4, 0x53, 0x4c, 0x72, 0x88, 0xd4, 0x90, 0xea, 0xab, 0xab, 0x1e, 0x2b,
	0x7e, 0xd6, 0x04, 0xd5, 0xf5, 0x87, 0x3e, 0x70, 0x2a, 0xbf, 0x44, 0x9f, 0xab, 0xcf, 0xd0, 0x43,
	0x4e, 0x7d, 0x82, 0x3e, 0x41, 0xc5, 0x07, 0x24, 0xa4, 0x92, 0x6f, 0x33, 0xcb, 0x0c, 0xcc, 0x0e,
	0x0b, 0x7a, 0x7a, 0x57, 0xb9, 0x85, 0xe0, 0x15, 0xc7, 0xa1, 0x84, 0xf1, 0xdc, 0xcf, 0xf2, 0xea,
	0x6e, 0x17, 0xbb, 0x09, 0xff, 0xee, 0x6d, 0xf2, 0xb8, 0xf0, 0x0b, 0x2f, 0xe3, 0x8b, 0x06, 0x2d,
	0x04, 0x25, 0x5c, 0xa4, 0x5e, 0x11, 0x7b, 0x0d, 0x6a, 0xbc, 0xf3, 0x45, 0xcf, 0x93, 0xf1, 0x8c,
	0x7b, 0x72, 0x1c, 0xef, 0xd6, 0x92, 0x49, 0x22, 0x51, 0x23, 0xb7, 0xff, 0x2a, 0x30, 0xf8, 0x48,
	0x24, 0xd0, 0x06, 0x35, 0x4f, 0x4d, 0xc5, 0x52, 0x9c, 0xf1, 0x12, 0x7f, 0x3d, 0x9c, 0x1f, 0xfd,
	0x7e, 0x38, 0x87, 0x78, 0x5f, 0xd1, 0xa7, 0x4a, 0xe4, 0xdb, 0x8c, 0xa9, 0x79, 0x8a, 0x2f, 0xe0,
	0x38, 0x4a, 0x53, 0x51, 0x9a, 0xaa, 0xa5, 0x39, 0x63, 0xd6, 0x10, 0x7c, 0x0f, 0x90, 0xf0, 0xed,
	0x96, 0x92, 0x2a, 0xe7, 0x5b, 0x53, 0xb3, 0x14, 0x67, 0xea, 0xbf, 0x72, 0x9b, 0x15, 0xdc, 0xfa,
	0xdd, 0x6e, 0xf0, 0xf8, 0x78, 0xb5, 0x2f, 0x88, 0xf5, 0xe4, 0x38, 0x87, 0x93, 0x35, 0x45, 0xd5,
	0x4e, 0x50, 0x69, 0x0e, 0x2c, 0xcd, 0xd1, 0xd9, 0x23, 0xb7, 0xbf, 0xc0, 0xf4, 0xb9, 0x13, 0xcf,
	0x60, 0x12, 0xde, 0xae, 0xbe, 0x06, 0xb7, 0x61, 0x78, 0x15, 0xac, 0xae, 0x2e, 0x67, 0x47, 0x38,
	0x01, 0xfd, 0x89, 0x2a, 0x78, 0x0a, 0x46, 0x70, 0x11, 0x76, 0x8a, 0x99, 0x8a, 0x08, 0xd3, 0xe0,
	0x22, 0xec, 0xb9, 0x66, 0x9a, 0xfd, 0x53, 0x81, 0xd1, 0x0d, 0x95, 0x65, 0x94, 0x11, 0x9a, 0x30,
	0x6a, 0x3f, 0x28, 0x97, 0xd7, 0x59, 0x47, 0x11, 0x61, 0x90, 0x46, 0x55, 0x64, 0xaa, 0x75, 0x27,
	0x4c, 0xe2, 0xf9, 0x67, 0x18, 0x2d, 0x23, 0x41, 0x37, 0x65, 0x86, 0x2f, 0x61, 0x58, 0x10, 0x89,
	0xeb, 0xcb, 0xd6, 0xd7, 0x32, 0xf4, 0x01, 0x92, 0x0d, 0x2f, 0x49, 0xd4, 0xab, 0xcb, 0xa6, 0x0c,
	0x7f, 0xdc, 0xaf, 0x63, 0x39, 0xa8, 0xeb, 0x65, 0x3d, 0x95, 0xfd, 0x47, 0x01, 0xe3, 0xba, 0x58,
	0x97, 0x5d, 0x28, 0x07, 0x4e, 0x93, 0xcd, 0xae, 0xac, 0x48, 0x7c, 0xa0, 0x7b, 0xda, 0xb0, 0xe8,
	0x87, 0x09, 0x96, 0xe2, 0x1c, 0xb3, 0xff, 0xc7, 0x38, 0x03, 0xed, 0x1b, 0xed, 0xdb, 0x8c, 0x35,
	0xc4, 0xd7, 0x30, 0x6c, 0x0e, 0x42, 0xfe, 0x0a, 0xc3, 0x3f, 0x73, 0xbb, 0xfb, 0x88, 0x5d, 0x26,
	0x11, 0x6b, 0x05, 0xf8, 0x16, 0x8c, 0xa7, 0x10, 0xa5, 0x79, 0x72, 0x30, 0x6b, 0x5f, 0x86, 0xef,
	0x60, 0x52, 0x08, 0x7e, 0x9f, 0xa7, 0x9d, 0x4f, 0x3f, 0xe8, 0x7b, 0x2e, 0x8c, 0x87, 0xf2, 0xe6,
	0xde, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x80, 0xea, 0x8c, 0xb7, 0xeb, 0x02, 0x00, 0x00,
}
